# Workflow will use Python 3.8 in lint stages using flake8, black and pydocstyle, unittest stage using pytest and pages stage using frozen flask
name: python-lint-test-pages-frozen-flask

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          pip install --upgrade pip --quiet
          pip install flake8==3.9.0 --quiet
          pip install black==22.3.0 --quiet
          pip install pydocstyle==6.0.0 --quiet
          pip install pipenv==2022.1.8 --quiet

      - name: flake8
        run:
          python -m flake8 . --ignore=E203,E266,E501,W503,F403,F401 --max-complexity=18 --max-line-length=88 --select=B,C,E,F,W,T4,B9

      - name: black
        run:
          python -m black . --check --verbose

      - name: pydocstyle
        run:
          python -m pydocstyle . --convention=google

  unittest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: unittest
        run: |
          echo 'No Unit Test Found'
# apt-get update --quiet
# apt-get upgrade -y --quiet
# apt-get install build-essential libssl-dev libffi-dev python3-dev -y --quiet
# pip install --upgrade pip --quiet
# pip install pytest --quiet
# pip install . --quiet
# python -m pytest

  pages:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        # Optional - x64 or x86 architecture, defaults to x64
        architecture: 'x64'

      # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"

    - name: Flask Build
      run: |
        pip install -r requirements.txt --quiet
        python freezer.py

    - name: Upload artifacts
      uses: actions/upload-artifact@v1
      with:
        name: html-docs
        path: _build

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: _build
